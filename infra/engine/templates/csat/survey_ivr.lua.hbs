-- CSAT Survey IVR for Node: {{node.id}}
-- Organization: {{organizationId}}
-- Flow: {{flowId}}

local org_id = "{{organizationId}}"
local node_id = "{{node.id}}"
local flow_id = "{{flowId}}"
local trace_id = session:getVariable("trace_id") or uuid.new()

-- Survey configuration
local survey_config = {
  {{#if node.data.surveyId}}
  survey_id = "{{node.data.surveyId}}",
  {{/if}}
  {{#if node.data.questions}}
  questions = {
    {{#each node.data.questions}}
    {
      id = "{{this.id}}",
      text = "{{this.text}}",
      type = "{{this.type}}", -- nps, stars
      audio_file = "{{../organizationId}}/csat/{{this.audioFile}}"
    }{{#unless @last}},{{/unless}}
    {{/each}}
  }
  {{/if}}
}

-- Set session variables
session:setVariable("organization_id", org_id)
session:setVariable("node_id", node_id)
session:setVariable("flow_id", flow_id)
session:setVariable("trace_id", trace_id)

-- Execute CSAT survey
if survey_config.questions then
  for i, question in ipairs(survey_config.questions) do
    -- Play question
    if question.audio_file then
      session:streamFile(question.audio_file)
    else
      session:speak("tts_commandline|callie|" .. question.text)
    end
    
    -- Collect response
    local digits = ""
    if question.type == "nps" then
      digits = session:playAndGetDigits(1, 2, 3, 5000, "#", 
        "silence_stream://500", "silence_stream://500", "\\d+")
    else -- stars (1-5)
      digits = session:playAndGetDigits(1, 1, 3, 5000, "#", 
        "silence_stream://500", "silence_stream://500", "[1-5]")
    end
    
    -- Save response to database via HTTP API
    if digits and digits ~= "" then
      local json_data = string.format([[{
        "organization_id": "%s",
        "survey_id": "%s",
        "question_id": "%s",
        "trace_id": "%s",
        "channel": "ivr",
        "score_type": "%s",
        "score": %s
      }]], org_id, survey_config.survey_id or "default", question.id, trace_id, question.type, digits)
      
      -- Call internal API to save response
      local api_url = "http://localhost:3000/api/csat/responses"
      local curl_cmd = string.format('curl -X POST -H "Content-Type: application/json" -d \'%s\' %s', json_data, api_url)
      os.execute(curl_cmd)
    end
  end
end

-- Continue to next node or end call
session:transfer("{{node.data.nextNode}}", "XML", "default")
